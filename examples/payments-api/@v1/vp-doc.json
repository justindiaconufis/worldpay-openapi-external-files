{
  "openapi": "3.0.1",
  "info": {
    "title": "Payments API",
    "description": "Access Worldpay API for payments ",
    "contact": {
      "name": "Chamaeleon",
      "email": "chamaeleon@fisglobal.com"
    },
    "version": "1.1.0"
  },
  "servers": [
    {
      "url": "https://localhost",
      "description": "Generated server url"
    }
  ],
  "paths": {
    "/api/payments": {
      "post": {
        "tags": [
          "payment"
        ],
        "summary": "Submit a payment request",
        "description": "Initiate Payment",
        "operationId": "payment",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WP-Api-Version",
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "2023-06-01"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentRequest"
              },
              "examples": {
                "Example of a card payment using only the mandatory values": {
                  "description": "Example of a card payment using only the mandatory values",
                  "externalValue": "https://raw.githubusercontent.com/justindiaconufis/worldpay-openapi-external-files/main/examples/payments-api/%40v1/examples/requests/card-payment-1.json"
                },
                "Example of a card payment using all possible values": {
                  "description": "Example of a card payment using all possible values",
                  "externalValue": "https://raw.githubusercontent.com/justindiaconufis/worldpay-openapi-external-files/main/examples/payments-api/%40v1/examples/requests/card-payment-2.json"
                },
                "Example of a tokenized card using only the mandatory values": {
                  "description": "Example of a tokenized card using only the mandatory values",
                  "externalValue": "https://raw.githubusercontent.com/justindiaconufis/worldpay-openapi-external-files/main/examples/payments-api/%40v1/examples/requests/tokenized-card-1.json"
                },
                "Example of a tokenized card with CVC": {
                  "description": "Example of a tokenized card with CVC",
                  "externalValue": "https://raw.githubusercontent.com/justindiaconufis/worldpay-openapi-external-files/main/examples/payments-api/%40v1/examples/requests/tokenized-card-2.json"
                },
                "Example of a Google wallet payment using only the mandatory values": {
                  "description": "Example of a Google wallet payment using only the mandatory values",
                  "externalValue": "https://raw.githubusercontent.com/justindiaconufis/worldpay-openapi-external-files/main/examples/payments-api/%40v1/examples/requests/google-wallet.json"
                },
                "Example of a Apple wallet payment using all possible values": {
                  "description": "Example of a Apple wallet payment using all possible values",
                  "externalValue": "https://raw.githubusercontent.com/justindiaconufis/worldpay-openapi-external-files/main/examples/payments-api/%40v1/examples/requests/apple-wallet.json"
                },
                "Example of a guest checkout payment using only the mandatory values": {
                  "description": "Example of a guest checkout payment using only the mandatory values",
                  "externalValue": "https://raw.githubusercontent.com/justindiaconufis/worldpay-openapi-external-files/main/examples/payments-api/%40v1/examples/requests/guest-checkout-1.json"
                },
                "Example of a guest checkout payment using all possible values": {
                  "description": "Example of a guest checkout payment using all possible values",
                  "externalValue": "https://raw.githubusercontent.com/justindiaconufis/worldpay-openapi-external-files/main/examples/payments-api/%40v1/examples/requests/guest-checkout-2.json"
                },
                "Example of a token creation at the end of a successful card payment:": {
                  "description": "Example of a token creation at the end of a successful card payment:",
                  "externalValue": "https://raw.githubusercontent.com/justindiaconufis/worldpay-openapi-external-files/main/examples/payments-api/%40v1/examples/requests/token-creation-card.json"
                },
                "Example of a token creation at the end of a successful guest checkout payment:": {
                  "description": "Example of a token creation at the end of a successful guest checkout payment:",
                  "externalValue": "https://raw.githubusercontent.com/justindiaconufis/worldpay-openapi-external-files/main/examples/payments-api/%40v1/examples/requests/token-creation-session.json"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                },
                "examples": {
                  "Bad request": {
                    "description": "Bad request",
                    "externalValue": "https://raw.githubusercontent.com/justindiaconufis/worldpay-openapi-external-files/main/examples/payments-api/%40v1/examples/responses/errors/400.json"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Unauthorized": {
                    "description": "Unauthorized",
                    "externalValue": "https://raw.githubusercontent.com/justindiaconufis/worldpay-openapi-external-files/main/examples/payments-api/%40v1/examples/responses/errors/401.json"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Not found": {
                    "description": "Not found",
                    "externalValue": "https://raw.githubusercontent.com/justindiaconufis/worldpay-openapi-external-files/main/examples/payments-api/%40v1/examples/responses/errors/404.json"
                  }
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Not acceptable": {
                    "description": "Not acceptable",
                    "externalValue": "https://raw.githubusercontent.com/justindiaconufis/worldpay-openapi-external-files/main/examples/payments-api/%40v1/examples/responses/errors/406.json"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentsResponse"
                },
                "examples": {
                  "Payment created": {
                    "description": "Payment created",
                    "externalValue": "https://raw.githubusercontent.com/justindiaconufis/worldpay-openapi-external-files/main/examples/payments-api/%40v1/examples/responses/verified-payment-201.json"
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentsResponse"
                },
                "examples": {
                  "Payment created": {
                    "description": "Payment created",
                    "externalValue": "https://raw.githubusercontent.com/justindiaconufis/worldpay-openapi-external-files/main/examples/payments-api/%40v1/examples/responses/verified-payment-202.json"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Internal server error": {
                    "description": "Internal server error",
                    "externalValue": "https://raw.githubusercontent.com/justindiaconufis/worldpay-openapi-external-files/main/examples/payments-api/%40v1/examples/responses/errors/500.json"
                  }
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Unsupported media type": {
                    "description": "Unsupported media type",
                    "externalValue": "https://raw.githubusercontent.com/justindiaconufis/worldpay-openapi-external-files/main/examples/payments-api/%40v1/examples/responses/errors/415.json"
                  }
                }
              }
            }
          }
        },
        "x-orderingPosition": "1"
      }
    },
    "/api/payments/3dsDeviceData/{transactionReference}/{merchantEntity}": {
      "post": {
        "tags": [
          "payment"
        ],
        "summary": "Provide 3DS device data",
        "description": "Gather additional device data",
        "operationId": "3dsDeviceData",
        "parameters": [
          {
            "name": "transactionReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "merchantEntity",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WP-Api-Version",
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "2023-06-01"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceDataRequest"
              },
              "examples": {
                "Example of 3dsDeviceData with collectionReference": {
                  "description": "Example of 3dsDeviceData with collectionReference",
                  "externalValue": "https://raw.githubusercontent.com/justindiaconufis/worldpay-openapi-external-files/main/examples/payments-api/%40v1/examples/requests/device-data.json"
                },
                "Example of 3dsDeviceData without collectionReference": {
                  "description": "Example of 3dsDeviceData without collectionReference"
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                },
                "examples": {
                  "Bad request": {
                    "description": "Bad request",
                    "externalValue": "https://raw.githubusercontent.com/justindiaconufis/worldpay-openapi-external-files/main/examples/payments-api/%40v1/examples/responses/errors/400.json"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentsResponse"
                },
                "examples": {
                  "Example of 3dsDeviceData with collectionReference": {
                    "description": "Example of 3dsDeviceData with collectionReference",
                    "externalValue": "https://raw.githubusercontent.com/justindiaconufis/worldpay-openapi-external-files/main/examples/payments-api/%40v1/examples/responses/device-data-201.json"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Unauthorized": {
                    "description": "Unauthorized",
                    "externalValue": "https://raw.githubusercontent.com/justindiaconufis/worldpay-openapi-external-files/main/examples/payments-api/%40v1/examples/responses/errors/401.json"
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentsResponse"
                },
                "examples": {
                  "Example of 3dsDeviceData without collectionReference": {
                    "description": "Example of 3dsDeviceData without collectionReference",
                    "externalValue": "https://raw.githubusercontent.com/justindiaconufis/worldpay-openapi-external-files/main/examples/payments-api/%40v1/examples/responses/device-data-202.json"
                  }
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Not acceptable": {
                    "description": "Not acceptable",
                    "externalValue": "https://raw.githubusercontent.com/justindiaconufis/worldpay-openapi-external-files/main/examples/payments-api/%40v1/examples/responses/errors/406.json"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Internal server error": {
                    "description": "Internal server error",
                    "externalValue": "https://raw.githubusercontent.com/justindiaconufis/worldpay-openapi-external-files/main/examples/payments-api/%40v1/examples/responses/errors/500.json"
                  }
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Unsupported media type": {
                    "description": "Unsupported media type",
                    "externalValue": "https://raw.githubusercontent.com/justindiaconufis/worldpay-openapi-external-files/main/examples/payments-api/%40v1/examples/responses/errors/415.json"
                  }
                }
              }
            }
          }
        },
        "x-orderingPosition": "2"
      }
    },
    "/api/payments/3dsChallenge/{transactionReference}/{merchantEntity}": {
      "post": {
        "tags": [
          "payment"
        ],
        "summary": "Continue with payment after 3DS challenge",
        "description": "Verify authentication challenge",
        "operationId": "3dsChallenge",
        "parameters": [
          {
            "name": "transactionReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "merchantEntity",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WP-Api-Version",
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "2023-06-01"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChallengeRequest"
              },
              "examples": {
                "Example of 3dsChallenge": {
                  "description": "Example of 3dsChallenge",
                  "externalValue": "https://raw.githubusercontent.com/justindiaconufis/worldpay-openapi-external-files/main/examples/payments-api/%40v1/examples/requests/challenge.json"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentsResponse"
                },
                "examples": {
                  "Example of 3dsChallenge": {
                    "description": "Example of 3dsChallenge",
                    "externalValue": "https://raw.githubusercontent.com/justindiaconufis/worldpay-openapi-external-files/main/examples/payments-api/%40v1/examples/responses/challenge-202.json"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                },
                "examples": {
                  "Bad request": {
                    "description": "Bad request",
                    "externalValue": "https://raw.githubusercontent.com/justindiaconufis/worldpay-openapi-external-files/main/examples/payments-api/%40v1/examples/responses/errors/400.json"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Unauthorized": {
                    "description": "Unauthorized",
                    "externalValue": "https://raw.githubusercontent.com/justindiaconufis/worldpay-openapi-external-files/main/examples/payments-api/%40v1/examples/responses/errors/401.json"
                  }
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Not acceptable": {
                    "description": "Not acceptable",
                    "externalValue": "https://raw.githubusercontent.com/justindiaconufis/worldpay-openapi-external-files/main/examples/payments-api/%40v1/examples/responses/errors/406.json"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Internal server error": {
                    "description": "Internal server error",
                    "externalValue": "https://raw.githubusercontent.com/justindiaconufis/worldpay-openapi-external-files/main/examples/payments-api/%40v1/examples/responses/errors/500.json"
                  }
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Unsupported media type": {
                    "description": "Unsupported media type",
                    "externalValue": "https://raw.githubusercontent.com/justindiaconufis/worldpay-openapi-external-files/main/examples/payments-api/%40v1/examples/responses/errors/415.json"
                  }
                }
              }
            }
          }
        },
        "x-orderingPosition": "3"
      }
    }
  },
  "components": {
    "schemas": {
      "DeviceDataRequest": {
        "type": "object",
        "properties": {
          "collectionReference": {
            "type": "string"
          }
        }
      },
      "ValidationErrorResponse": {
        "type": "object",
        "properties": {
          "errorName": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "jsonPath": {
            "type": "string"
          },
          "validationErrors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationErrorResponse"
            }
          }
        }
      },
      "Links": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/Link"
        }
      },
      "PaymentsResponse": {
        "type": "object",
        "properties": {
          "outcome": {
            "type": "string",
            "enum": [
              "3dsDeviceDataRequired",
              "3dsChallenged",
              "sentForSettlement",
              "sentForCancellation",
              "refused",
              "3dsAuthenticationFailed",
              "3dsNotEnrolled",
              "3dsUnavailable",
              "3dsSignatureFailed",
              "fraudHighRisk"
            ]
          },
          "transactionReference": {
            "type": "string",
            "description": "A unique reference for authentication. For example, e-commerce order code."
          },
          "_links": {
            "$ref": "#/components/schemas/Links"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "errorName": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "ChallengeRequest": {
        "required": [
          "challengeReference"
        ],
        "type": "object",
        "properties": {
          "challengeReference": {
            "type": "string"
          }
        }
      },
      "Account": {
        "type": "object",
        "properties": {
          "previousSuspiciousActivity": {
            "type": "boolean",
            "description": "Has the account been flagged for suspicious activity."
          },
          "type": {
            "type": "string",
            "enum": [
              "guestUser",
              "registeredUser",
              "federatedAccount",
              "issuerCredentials",
              "thirdPartyAuthentication",
              "fidoAuthenticator"
            ]
          },
          "email": {
            "type": "string",
            "description": "Customers email address used for the ecommerce account."
          },
          "history": {
            "$ref": "#/components/schemas/AccountHistory"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Customer date of birth."
          },
          "shopperId": {
            "type": "string",
            "description": "Unique identifier used by the ecommerce system for the customer."
          }
        },
        "description": "Customer account information."
      },
      "AccountHistory": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "description": "Date the customer account was created."
          },
          "modifiedAt": {
            "type": "string",
            "description": "Date the customer account was last modified."
          },
          "passwordModifiedAt": {
            "type": "string",
            "description": "Date the password for the customer account was last modified."
          },
          "paymentAccountEnrolledAt": {
            "type": "string",
            "description": "Date the payment account was added to the cardholder account."
          }
        },
        "description": "Customer account history."
      },
      "ApplePay": {
        "required": [
          "walletToken"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentInstrument"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "The type of instrument"
              },
              "walletToken": {
                "type": "string"
              },
              "billingAddress": {
                "$ref": "#/components/schemas/BillingAddress"
              }
            }
          }
        ]
      },
      "BillingAddress": {
        "required": [
          "address1",
          "city",
          "countryCode"
        ],
        "type": "object",
        "properties": {
          "address1": {
            "type": "string",
            "description": "[1...80] characters"
          },
          "address2": {
            "type": "string",
            "description": "[1...80] characters"
          },
          "address3": {
            "type": "string",
            "description": "[1...80] characters"
          },
          "postalCode": {
            "type": "string",
            "description": "[1...15] characters"
          },
          "city": {
            "type": "string",
            "description": "[1...50] characters"
          },
          "state": {
            "type": "string",
            "description": "[1...30] characters"
          },
          "countryCode": {
            "type": "string",
            "description": "[2...2] characters\n\nThe supported ISO 3166-1 alpha-2 country code"
          }
        },
        "description": "An object containing the billing address information."
      },
      "Card": {
        "required": [
          "cardExpiryDate",
          "cardNumber"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentInstrument"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "The type of instrument"
              },
              "cardHolderName": {
                "type": "string",
                "description": "[ 1 .. 255 ] characters\n\nThe name on your customer's card. Required if  instruction.createToken is present. However we recommend that you supply this to improve authentication rates."
              },
              "cardNumber": {
                "type": "string",
                "description": "[10...19] characters\n\nAn object that contains your customer's card number."
              },
              "cardExpiryDate": {
                "$ref": "#/components/schemas/CardExpiryDate"
              },
              "cvc": {
                "type": "string",
                "description": "CVC is a unique set of 3 or 4 numbers on the back of the card. Our API checks to see if the CVC supplied matches the CVC held by the issuing bank."
              },
              "billingAddress": {
                "$ref": "#/components/schemas/BillingAddress"
              }
            }
          }
        ]
      },
      "CardExpiryDate": {
        "required": [
          "month",
          "year"
        ],
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "month": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "An object that contains your customer's card expiry date."
      },
      "Challenge": {
        "type": "object",
        "properties": {
          "returnUrl": {
            "type": "string",
            "description": "Once the customer completes the challenge page the issuer redirects/posts to the returnUrl in order for you to resume the session. It must be the full URL path. Required if paymentInstrument.type = card/plain & card/session"
          },
          "windowSize": {
            "type": "string",
            "description": "Specify the challenge window size (width x height) that the issuer should use. This is to better tailor the experience to the customers device. Default is 390x400.",
            "default": "390x400",
            "enum": [
              "250x400",
              "390x400",
              "600x400",
              "500x600",
              "fullpage"
            ]
          },
          "preference": {
            "type": "string",
            "description": "Set a preference for how the Issuer decides on a 3DS challenge. challengeMandated will be automatically set by verified payments for the first CIT payment in an MIT series or when storing cards (token creation).",
            "enum": [
              "noPreference",
              "noChallengeRequested",
              "challengeRequested",
              "challengeMandated"
            ]
          }
        },
        "description": "An object containing 3DS challenge preferences and configuration."
      },
      "Custom": {
        "type": "object",
        "properties": {
          "number1": {
            "type": "integer",
            "format": "int32"
          },
          "number2": {
            "type": "integer",
            "format": "int32"
          },
          "number3": {
            "type": "integer",
            "format": "int32"
          },
          "number4": {
            "type": "integer",
            "format": "int32"
          },
          "number5": {
            "type": "integer",
            "format": "int32"
          },
          "number6": {
            "type": "integer",
            "format": "int32"
          },
          "number7": {
            "type": "integer",
            "format": "int32"
          },
          "number8": {
            "type": "integer",
            "format": "int32"
          },
          "number9": {
            "type": "integer",
            "format": "int32"
          },
          "string1": {
            "type": "string"
          },
          "string2": {
            "type": "string"
          },
          "string3": {
            "type": "string"
          },
          "string4": {
            "type": "string"
          },
          "string5": {
            "type": "string"
          },
          "string6": {
            "type": "string"
          },
          "string7": {
            "type": "string"
          },
          "string8": {
            "type": "string"
          },
          "string9": {
            "type": "string"
          }
        },
        "description": "Additional values specific to your order that can be used to create manual fraud rules."
      },
      "DeviceData": {
        "type": "object",
        "properties": {
          "acceptHeader": {
            "type": "string",
            "description": "Used by the issuer to check if the customer's browser is compatible with the issuer 3DS challenge display. Required if paymentInstrument.type = card/plain & card/session."
          },
          "userAgentHeader": {
            "type": "string",
            "description": "Used by issuers as part of risk analysis and correctly displaying the challenge. Must conform to RFC 7321. Required if paymentInstrument.type = card/plain & card/session."
          },
          "browserLanguage": {
            "type": "string",
            "description": "Your customer's browser language that can be used by the issuer in risk analysis. Must conform to the language tags defined by IETF. E.g. en-GB, fr-FR"
          },
          "ipAddress": {
            "type": "string",
            "description": "A unique identifier for your customer's physical location that can be used by the issuer in risk analysis. Must be in IPv4 format. E.g. 192.0.0.0"
          }
        },
        "description": "An object containing device data for 3DS & Fraud assessment."
      },
      "Fraud": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Enable a FraudSight risk assessment",
            "default": "FraudSight",
            "enum": [
              "FraudSight"
            ]
          },
          "silentMode": {
            "type": "boolean",
            "description": "Perform the Fraud assessment but do not act on the outcome. Normally used for the initial launch.",
            "default": false
          },
          "tmxSessionId": {
            "type": "string",
            "description": "Device fingerprint provided by Threatmetrix."
          }
        },
        "description": "Fraud assessment to detect potential fraud and prevent the transaction from proceeding."
      },
      "GiftCardsPurchase": {
        "type": "object",
        "properties": {
          "totalValue": {
            "$ref": "#/components/schemas/Value"
          },
          "quantity": {
            "type": "integer",
            "description": "The number of gift cards being purchased.",
            "format": "int32"
          }
        },
        "description": "If the order is being used to purchase a gift card."
      },
      "GooglePay": {
        "required": [
          "walletToken"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentInstrument"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "The type of instrument"
              },
              "walletToken": {
                "type": "string"
              },
              "billingAddress": {
                "$ref": "#/components/schemas/BillingAddress"
              }
            }
          }
        ]
      },
      "Instruction": {
        "required": [
          "narrative",
          "paymentInstrument",
          "value"
        ],
        "type": "object",
        "properties": {
          "paymentInstrument": {
            "$ref": "#/components/schemas/PaymentInstrument"
          },
          "narrative": {
            "$ref": "#/components/schemas/Narrative"
          },
          "createToken": {
            "$ref": "#/components/schemas/WorldpayCreateToken"
          },
          "value": {
            "$ref": "#/components/schemas/Value"
          },
          "debtRepayment": {
            "type": "boolean"
          },
          "fraud": {
            "$ref": "#/components/schemas/Fraud"
          }
        },
        "description": "An object that contains all the information related to the payment."
      },
      "Merchant": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "type": "string",
            "description": "Used to route the request in Access Worldpay, created as part of on-boarding."
          },
          "mcc": {
            "type": "string",
            "description": "You can apply a merchant category code (mcc) to an individual request. You can only provide an mcc if we have enabled the dynamic mcc feature during boarding. If enabled but not provided, merchant.mcc defaults to a configured value."
          }
        },
        "description": "An object that contains information about the merchant and API level configuration."
      },
      "Narrative": {
        "required": [
          "line1"
        ],
        "type": "object",
        "properties": {
          "line1": {
            "type": "string",
            "description": "[1...24] characters\n\nline1 is used to provide basic details about the merchant."
          },
          "line2": {
            "type": "string",
            "description": "[1...24] characters\n\nline2 is used for additional context about the payment or merchant. eg Order number or Merchant phone number."
          }
        },
        "description": "The text that appears on your customer's statement. Used to identify the merchant."
      },
      "PaymentInstrument": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "description": "The instrument used to take the payment.",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "Card": "#/components/schemas/Card",
            "Token": "#/components/schemas/Token",
            "Session": "#/components/schemas/Session",
            "ApplePay": "#/components/schemas/ApplePay",
            "GooglePay": "#/components/schemas/GooglePay"
          }
        }
      },
      "PaymentRequest": {
        "required": [
          "instruction",
          "merchant",
          "transactionReference"
        ],
        "type": "object",
        "properties": {
          "transactionReference": {
            "type": "string",
            "description": "[ 1 .. 64 ] characters\n\nA unique reference generated by you that is used to identify a payment throughout its lifecycle."
          },
          "merchant": {
            "$ref": "#/components/schemas/Merchant"
          },
          "instruction": {
            "$ref": "#/components/schemas/Instruction"
          },
          "challenge": {
            "$ref": "#/components/schemas/Challenge"
          },
          "deviceData": {
            "$ref": "#/components/schemas/DeviceData"
          },
          "riskData": {
            "$ref": "#/components/schemas/RiskData"
          }
        }
      },
      "RiskData": {
        "type": "object",
        "properties": {
          "account": {
            "$ref": "#/components/schemas/Account"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction"
          },
          "shipping": {
            "$ref": "#/components/schemas/Shipping"
          },
          "custom": {
            "$ref": "#/components/schemas/Custom"
          }
        },
        "description": "An object containing additional information used for 3DS and Fraud risk assessment."
      },
      "Session": {
        "required": [
          "sessionHref"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentInstrument"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "The type of instrument"
              },
              "sessionHref": {
                "type": "string"
              },
              "cardHolderName": {
                "type": "string",
                "description": "[ 1 .. 255 ] characters\n\nThe name on your customer's card. Required if  instruction.createToken is present. However we recommend that you supply this to improve authentication rates."
              },
              "billingAddress": {
                "$ref": "#/components/schemas/BillingAddress"
              }
            }
          }
        ]
      },
      "Shipping": {
        "type": "object",
        "properties": {
          "nameMatchesAccountName": {
            "type": "boolean",
            "description": "Customer name on account is identical to the shipping name."
          },
          "method": {
            "type": "string",
            "description": "The shipping method used.",
            "enum": [
              "billingAddress",
              "verifiedAddress",
              "otherAddress",
              "store",
              "digital",
              "unshippedTickets",
              "other"
            ]
          },
          "timeFrame": {
            "type": "string",
            "enum": [
              "electronic",
              "sameDay",
              "nextDay",
              "twoDaysPlus"
            ]
          },
          "email": {
            "type": "string",
            "description": "The email address used for an electronic delivery."
          },
          "firstName": {
            "type": "string",
            "description": "First name used on the shipping address."
          },
          "lastName": {
            "type": "string",
            "description": "Last name used on the shipping address."
          },
          "address": {
            "$ref": "#/components/schemas/ShippingAddress"
          }
        },
        "description": "Object containing all data related to how the order will be shipped."
      },
      "ShippingAddress": {
        "required": [
          "city",
          "countryCode"
        ],
        "type": "object",
        "properties": {
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "address3": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          }
        }
      },
      "Token": {
        "required": [
          "href"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentInstrument"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "The type of instrument"
              },
              "href": {
                "type": "string"
              },
              "cvc": {
                "type": "string",
                "description": "CVC is a unique set of 3 or 4 numbers on the back of the card. Our API checks to see if the CVC supplied matches the CVC held by the issuing bank."
              }
            }
          }
        ]
      },
      "Transaction": {
        "type": "object",
        "properties": {
          "reorder": {
            "type": "boolean",
            "description": "Repeat of a previous order."
          },
          "preOrderDate": {
            "type": "string",
            "description": "Expected date that a pre-ordered purchase will be available."
          },
          "firstName": {
            "type": "string",
            "description": "Customer's first name."
          },
          "lastName": {
            "type": "string",
            "description": "Customer's last name."
          },
          "phoneNumber": {
            "type": "string",
            "description": "Customer's phone number."
          },
          "history": {
            "$ref": "#/components/schemas/TransactionHistory"
          },
          "giftCardsPurchase": {
            "$ref": "#/components/schemas/GiftCardsPurchase"
          }
        },
        "description": "Object containing all customer transaction related risk data."
      },
      "TransactionHistory": {
        "type": "object",
        "properties": {
          "attemptsLastDay": {
            "type": "integer",
            "description": "Number of transactions (successful or abandoned) for this cardholder account within the last 24 hours.",
            "format": "int32"
          },
          "attemptsLastYear": {
            "type": "integer",
            "description": "Number of transactions (successful or abandoned) for this cardholder account within the last year.",
            "format": "int32"
          },
          "completedLastSixMonths": {
            "type": "integer",
            "description": "Number of purchases with this customer account during the previous six months.",
            "format": "int32"
          },
          "addCardsLastDay": {
            "type": "integer",
            "description": "Number of attempts to add a card in the last 24hrs.",
            "format": "int32"
          },
          "shippingAddressFirstUsedAt": {
            "type": "string",
            "description": "When the shipping address used for the transaction was first used."
          }
        },
        "description": "Object containing details of the last transaction."
      },
      "Value": {
        "required": [
          "amount",
          "currency"
        ],
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "The three digit currency code. See list of supported currencies."
          },
          "amount": {
            "type": "integer",
            "description": "The amount, if provided must include the currency.",
            "format": "int32"
          }
        },
        "description": "The value and currency."
      },
      "WorldpayCreateToken": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "worldpay"
            ]
          },
          "namespace": {
            "type": "string",
            "description": "[1...64] characters\n\nA namespace is used to group up to 16 cards, e.g. for one customer. A card can exist in more than one namespace."
          },
          "description": {
            "type": "string",
            "description": "[1...255] characters\n\nA description of your token. If not supplied, a default description is created for you."
          }
        },
        "description": "Use this object if you want to create a token after the payment."
      },
      "Link": {
        "type": "object",
        "properties": {
          "href": {
            "type": "string"
          },
          "hreflang": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "deprecation": {
            "type": "string"
          },
          "profile": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "templated": {
            "type": "boolean"
          }
        }
      }
    },
    "securitySchemes": {
      "BasicAuth": {
        "type": "http",
        "in": "header"
      }
    }
  }
}